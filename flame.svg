<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="550" onload="init(evt)" viewBox="0 0 1200 550" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="550" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="533.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="533.00"> </text><svg id="frames" x="10" width="1180" total_samples="7724"><g><title>add3_vec3 (14 samples, 0.18%)</title><rect x="0.2978%" y="405" width="0.1813%" height="15" fill="rgb(227,0,7)" fg:x="23" fg:w="14"/><text x="0.5478%" y="415.50"></text></g><g><title>vec3 (3 samples, 0.04%)</title><rect x="0.4402%" y="389" width="0.0388%" height="15" fill="rgb(217,0,24)" fg:x="34" fg:w="3"/><text x="0.6902%" y="399.50"></text></g><g><title>fill_pixel (4 samples, 0.05%)</title><rect x="0.4790%" y="405" width="0.0518%" height="15" fill="rgb(221,193,54)" fg:x="37" fg:w="4"/><text x="0.7290%" y="415.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.04%)</title><rect x="0.4920%" y="389" width="0.0388%" height="15" fill="rgb(248,212,6)" fg:x="38" fg:w="3"/><text x="0.7420%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.04%)</title><rect x="0.4920%" y="373" width="0.0388%" height="15" fill="rgb(208,68,35)" fg:x="38" fg:w="3"/><text x="0.7420%" y="383.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.04%)</title><rect x="0.4920%" y="357" width="0.0388%" height="15" fill="rgb(232,128,0)" fg:x="38" fg:w="3"/><text x="0.7420%" y="367.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.03%)</title><rect x="0.5049%" y="341" width="0.0259%" height="15" fill="rgb(207,160,47)" fg:x="39" fg:w="2"/><text x="0.7549%" y="351.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.03%)</title><rect x="0.5049%" y="325" width="0.0259%" height="15" fill="rgb(228,23,34)" fg:x="39" fg:w="2"/><text x="0.7549%" y="335.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.03%)</title><rect x="0.5049%" y="309" width="0.0259%" height="15" fill="rgb(218,30,26)" fg:x="39" fg:w="2"/><text x="0.7549%" y="319.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.03%)</title><rect x="0.5049%" y="293" width="0.0259%" height="15" fill="rgb(220,122,19)" fg:x="39" fg:w="2"/><text x="0.7549%" y="303.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.03%)</title><rect x="0.5049%" y="277" width="0.0259%" height="15" fill="rgb(250,228,42)" fg:x="39" fg:w="2"/><text x="0.7549%" y="287.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.03%)</title><rect x="0.5049%" y="261" width="0.0259%" height="15" fill="rgb(240,193,28)" fg:x="39" fg:w="2"/><text x="0.7549%" y="271.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.03%)</title><rect x="0.5049%" y="245" width="0.0259%" height="15" fill="rgb(216,20,37)" fg:x="39" fg:w="2"/><text x="0.7549%" y="255.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.01%)</title><rect x="0.5179%" y="229" width="0.0129%" height="15" fill="rgb(206,188,39)" fg:x="40" fg:w="1"/><text x="0.7679%" y="239.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.01%)</title><rect x="0.5179%" y="213" width="0.0129%" height="15" fill="rgb(217,207,13)" fg:x="40" fg:w="1"/><text x="0.7679%" y="223.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.01%)</title><rect x="0.7121%" y="389" width="0.0129%" height="15" fill="rgb(231,73,38)" fg:x="55" fg:w="1"/><text x="0.9621%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.01%)</title><rect x="0.7121%" y="373" width="0.0129%" height="15" fill="rgb(225,20,46)" fg:x="55" fg:w="1"/><text x="0.9621%" y="383.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.01%)</title><rect x="0.7121%" y="357" width="0.0129%" height="15" fill="rgb(210,31,41)" fg:x="55" fg:w="1"/><text x="0.9621%" y="367.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.01%)</title><rect x="0.7121%" y="341" width="0.0129%" height="15" fill="rgb(221,200,47)" fg:x="55" fg:w="1"/><text x="0.9621%" y="351.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.01%)</title><rect x="0.7121%" y="325" width="0.0129%" height="15" fill="rgb(226,26,5)" fg:x="55" fg:w="1"/><text x="0.9621%" y="335.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.01%)</title><rect x="0.7121%" y="309" width="0.0129%" height="15" fill="rgb(249,33,26)" fg:x="55" fg:w="1"/><text x="0.9621%" y="319.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.01%)</title><rect x="0.7121%" y="293" width="0.0129%" height="15" fill="rgb(235,183,28)" fg:x="55" fg:w="1"/><text x="0.9621%" y="303.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.01%)</title><rect x="0.7121%" y="277" width="0.0129%" height="15" fill="rgb(221,5,38)" fg:x="55" fg:w="1"/><text x="0.9621%" y="287.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.01%)</title><rect x="0.7121%" y="261" width="0.0129%" height="15" fill="rgb(247,18,42)" fg:x="55" fg:w="1"/><text x="0.9621%" y="271.50"></text></g><g><title>vbg_heartbeat_timer (1 samples, 0.01%)</title><rect x="0.7121%" y="245" width="0.0129%" height="15" fill="rgb(241,131,45)" fg:x="55" fg:w="1"/><text x="0.9621%" y="255.50"></text></g><g><title>vbg_req_perform (1 samples, 0.01%)</title><rect x="0.7121%" y="229" width="0.0129%" height="15" fill="rgb(249,31,29)" fg:x="55" fg:w="1"/><text x="0.9621%" y="239.50"></text></g><g><title>mult_vec3 (20 samples, 0.26%)</title><rect x="0.5308%" y="405" width="0.2589%" height="15" fill="rgb(225,111,53)" fg:x="41" fg:w="20"/><text x="0.7808%" y="415.50"></text></g><g><title>vec3 (5 samples, 0.06%)</title><rect x="0.7250%" y="389" width="0.0647%" height="15" fill="rgb(238,160,17)" fg:x="56" fg:w="5"/><text x="0.9750%" y="399.50"></text></g><g><title>add_vec3_self (2 samples, 0.03%)</title><rect x="0.9969%" y="389" width="0.0259%" height="15" fill="rgb(214,148,48)" fg:x="77" fg:w="2"/><text x="1.2469%" y="399.50"></text></g><g><title>dot_vec3 (10 samples, 0.13%)</title><rect x="1.2040%" y="373" width="0.1295%" height="15" fill="rgb(232,36,49)" fg:x="93" fg:w="10"/><text x="1.4540%" y="383.50"></text></g><g><title>hit_sphere (39 samples, 0.50%)</title><rect x="1.0228%" y="389" width="0.5049%" height="15" fill="rgb(209,103,24)" fg:x="79" fg:w="39"/><text x="1.2728%" y="399.50"></text></g><g><title>sub_vec3 (15 samples, 0.19%)</title><rect x="1.3335%" y="373" width="0.1942%" height="15" fill="rgb(229,88,8)" fg:x="103" fg:w="15"/><text x="1.5835%" y="383.50"></text></g><g><title>vec3 (4 samples, 0.05%)</title><rect x="1.4759%" y="357" width="0.0518%" height="15" fill="rgb(213,181,19)" fg:x="114" fg:w="4"/><text x="1.7259%" y="367.50"></text></g><g><title>mult_vec3 (2 samples, 0.03%)</title><rect x="1.5277%" y="389" width="0.0259%" height="15" fill="rgb(254,191,54)" fg:x="118" fg:w="2"/><text x="1.7777%" y="399.50"></text></g><g><title>vec3 (2 samples, 0.03%)</title><rect x="1.5277%" y="373" width="0.0259%" height="15" fill="rgb(241,83,37)" fg:x="118" fg:w="2"/><text x="1.7777%" y="383.50"></text></g><g><title>sub_vec3_self (1 samples, 0.01%)</title><rect x="1.5536%" y="389" width="0.0129%" height="15" fill="rgb(233,36,39)" fg:x="120" fg:w="1"/><text x="1.8036%" y="399.50"></text></g><g><title>unit_vec3 (3 samples, 0.04%)</title><rect x="1.5665%" y="389" width="0.0388%" height="15" fill="rgb(226,3,54)" fg:x="121" fg:w="3"/><text x="1.8165%" y="399.50"></text></g><g><title>unit_vec3_self (12 samples, 0.16%)</title><rect x="1.6054%" y="389" width="0.1554%" height="15" fill="rgb(245,192,40)" fg:x="124" fg:w="12"/><text x="1.8554%" y="399.50"></text></g><g><title>mult_vec3_self (6 samples, 0.08%)</title><rect x="1.6831%" y="373" width="0.0777%" height="15" fill="rgb(238,167,29)" fg:x="130" fg:w="6"/><text x="1.9331%" y="383.50"></text></g><g><title>ray_color_sphere_shaded (82 samples, 1.06%)</title><rect x="0.7897%" y="405" width="1.0616%" height="15" fill="rgb(232,182,51)" fg:x="61" fg:w="82"/><text x="1.0397%" y="415.50"></text></g><g><title>vec3_to_color (7 samples, 0.09%)</title><rect x="1.7607%" y="389" width="0.0906%" height="15" fill="rgb(231,60,39)" fg:x="136" fg:w="7"/><text x="2.0107%" y="399.50"></text></g><g><title>generate_sphere_shaded (149 samples, 1.93%)</title><rect x="0.0000%" y="421" width="1.9291%" height="15" fill="rgb(208,69,12)" fg:x="0" fg:w="149"/><text x="0.2500%" y="431.50">g..</text></g><g><title>sub_vec3 (6 samples, 0.08%)</title><rect x="1.8514%" y="405" width="0.0777%" height="15" fill="rgb(235,93,37)" fg:x="143" fg:w="6"/><text x="2.1014%" y="415.50"></text></g><g><title>vec3 (4 samples, 0.05%)</title><rect x="1.8773%" y="389" width="0.0518%" height="15" fill="rgb(213,116,39)" fg:x="145" fg:w="4"/><text x="2.1273%" y="399.50"></text></g><g><title>__errno_location (13 samples, 0.17%)</title><rect x="2.4081%" y="309" width="0.1683%" height="15" fill="rgb(222,207,29)" fg:x="186" fg:w="13"/><text x="2.6581%" y="319.50"></text></g><g><title>[libxcb.so.1.1.0] (117 samples, 1.51%)</title><rect x="2.3822%" y="325" width="1.5148%" height="15" fill="rgb(206,96,30)" fg:x="184" fg:w="117"/><text x="2.6322%" y="335.50"></text></g><g><title>recvmsg (102 samples, 1.32%)</title><rect x="2.5764%" y="309" width="1.3206%" height="15" fill="rgb(218,138,4)" fg:x="199" fg:w="102"/><text x="2.8264%" y="319.50"></text></g><g><title>[[kernel.kallsyms]] (60 samples, 0.78%)</title><rect x="3.1201%" y="293" width="0.7768%" height="15" fill="rgb(250,191,14)" fg:x="241" fg:w="60"/><text x="3.3701%" y="303.50"></text></g><g><title>[[kernel.kallsyms]] (60 samples, 0.78%)</title><rect x="3.1201%" y="277" width="0.7768%" height="15" fill="rgb(239,60,40)" fg:x="241" fg:w="60"/><text x="3.3701%" y="287.50"></text></g><g><title>[[kernel.kallsyms]] (60 samples, 0.78%)</title><rect x="3.1201%" y="261" width="0.7768%" height="15" fill="rgb(206,27,48)" fg:x="241" fg:w="60"/><text x="3.3701%" y="271.50"></text></g><g><title>[[kernel.kallsyms]] (36 samples, 0.47%)</title><rect x="3.4309%" y="245" width="0.4661%" height="15" fill="rgb(225,35,8)" fg:x="265" fg:w="36"/><text x="3.6809%" y="255.50"></text></g><g><title>[[kernel.kallsyms]] (33 samples, 0.43%)</title><rect x="3.4697%" y="229" width="0.4272%" height="15" fill="rgb(250,213,24)" fg:x="268" fg:w="33"/><text x="3.7197%" y="239.50"></text></g><g><title>[[kernel.kallsyms]] (25 samples, 0.32%)</title><rect x="3.5733%" y="213" width="0.3237%" height="15" fill="rgb(247,123,22)" fg:x="276" fg:w="25"/><text x="3.8233%" y="223.50"></text></g><g><title>[[kernel.kallsyms]] (24 samples, 0.31%)</title><rect x="3.5862%" y="197" width="0.3107%" height="15" fill="rgb(231,138,38)" fg:x="277" fg:w="24"/><text x="3.8362%" y="207.50"></text></g><g><title>[[kernel.kallsyms]] (15 samples, 0.19%)</title><rect x="3.7027%" y="181" width="0.1942%" height="15" fill="rgb(231,145,46)" fg:x="286" fg:w="15"/><text x="3.9527%" y="191.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.08%)</title><rect x="3.8193%" y="165" width="0.0777%" height="15" fill="rgb(251,118,11)" fg:x="295" fg:w="6"/><text x="4.0693%" y="175.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.01%)</title><rect x="3.8840%" y="149" width="0.0129%" height="15" fill="rgb(217,147,25)" fg:x="300" fg:w="1"/><text x="4.1340%" y="159.50"></text></g><g><title>[libxcb.so.1.1.0] (122 samples, 1.58%)</title><rect x="2.3304%" y="341" width="1.5795%" height="15" fill="rgb(247,81,37)" fg:x="180" fg:w="122"/><text x="2.5804%" y="351.50"></text></g><g><title>pthread_mutex_lock (1 samples, 0.01%)</title><rect x="3.8969%" y="325" width="0.0129%" height="15" fill="rgb(209,12,38)" fg:x="301" fg:w="1"/><text x="4.1469%" y="335.50"></text></g><g><title>[libX11.so.6.4.0] (134 samples, 1.73%)</title><rect x="2.1880%" y="357" width="1.7349%" height="15" fill="rgb(227,1,9)" fg:x="169" fg:w="134"/><text x="2.4380%" y="367.50"></text></g><g><title>xcb_poll_for_event (1 samples, 0.01%)</title><rect x="3.9099%" y="341" width="0.0129%" height="15" fill="rgb(248,47,43)" fg:x="302" fg:w="1"/><text x="4.1599%" y="351.50"></text></g><g><title>[libxcb.so.1.1.0] (258 samples, 3.34%)</title><rect x="4.0653%" y="341" width="3.3402%" height="15" fill="rgb(221,10,30)" fg:x="314" fg:w="258"/><text x="4.3153%" y="351.50">[li..</text></g><g><title>recvmsg (254 samples, 3.29%)</title><rect x="4.1170%" y="325" width="3.2885%" height="15" fill="rgb(210,229,1)" fg:x="318" fg:w="254"/><text x="4.3670%" y="335.50">rec..</text></g><g><title>[[kernel.kallsyms]] (137 samples, 1.77%)</title><rect x="5.6318%" y="309" width="1.7737%" height="15" fill="rgb(222,148,37)" fg:x="435" fg:w="137"/><text x="5.8818%" y="319.50">[..</text></g><g><title>[[kernel.kallsyms]] (137 samples, 1.77%)</title><rect x="5.6318%" y="293" width="1.7737%" height="15" fill="rgb(234,67,33)" fg:x="435" fg:w="137"/><text x="5.8818%" y="303.50">[..</text></g><g><title>[[kernel.kallsyms]] (137 samples, 1.77%)</title><rect x="5.6318%" y="277" width="1.7737%" height="15" fill="rgb(247,98,35)" fg:x="435" fg:w="137"/><text x="5.8818%" y="287.50">[..</text></g><g><title>[[kernel.kallsyms]] (104 samples, 1.35%)</title><rect x="6.0590%" y="261" width="1.3465%" height="15" fill="rgb(247,138,52)" fg:x="468" fg:w="104"/><text x="6.3090%" y="271.50"></text></g><g><title>[[kernel.kallsyms]] (99 samples, 1.28%)</title><rect x="6.1238%" y="245" width="1.2817%" height="15" fill="rgb(213,79,30)" fg:x="473" fg:w="99"/><text x="6.3738%" y="255.50"></text></g><g><title>[[kernel.kallsyms]] (82 samples, 1.06%)</title><rect x="6.3439%" y="229" width="1.0616%" height="15" fill="rgb(246,177,23)" fg:x="490" fg:w="82"/><text x="6.5939%" y="239.50"></text></g><g><title>[[kernel.kallsyms]] (72 samples, 0.93%)</title><rect x="6.4733%" y="213" width="0.9322%" height="15" fill="rgb(230,62,27)" fg:x="500" fg:w="72"/><text x="6.7233%" y="223.50"></text></g><g><title>[[kernel.kallsyms]] (49 samples, 0.63%)</title><rect x="6.7711%" y="197" width="0.6344%" height="15" fill="rgb(216,154,8)" fg:x="523" fg:w="49"/><text x="7.0211%" y="207.50"></text></g><g><title>[[kernel.kallsyms]] (12 samples, 0.16%)</title><rect x="7.2501%" y="181" width="0.1554%" height="15" fill="rgb(244,35,45)" fg:x="560" fg:w="12"/><text x="7.5001%" y="191.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.01%)</title><rect x="7.3925%" y="165" width="0.0129%" height="15" fill="rgb(251,115,12)" fg:x="571" fg:w="1"/><text x="7.6425%" y="175.50"></text></g><g><title>[libX11.so.6.4.0] (409 samples, 5.30%)</title><rect x="2.1491%" y="373" width="5.2952%" height="15" fill="rgb(240,54,50)" fg:x="166" fg:w="409"/><text x="2.3991%" y="383.50">[libX1..</text></g><g><title>xcb_poll_for_reply64 (272 samples, 3.52%)</title><rect x="3.9228%" y="357" width="3.5215%" height="15" fill="rgb(233,84,52)" fg:x="303" fg:w="272"/><text x="4.1728%" y="367.50">xcb..</text></g><g><title>pthread_mutex_unlock (3 samples, 0.04%)</title><rect x="7.4055%" y="341" width="0.0388%" height="15" fill="rgb(207,117,47)" fg:x="572" fg:w="3"/><text x="7.6555%" y="351.50"></text></g><g><title>_XSend (7 samples, 0.09%)</title><rect x="7.4443%" y="373" width="0.0906%" height="15" fill="rgb(249,43,39)" fg:x="575" fg:w="7"/><text x="7.6943%" y="383.50"></text></g><g><title>xcb_writev (2 samples, 0.03%)</title><rect x="7.5091%" y="357" width="0.0259%" height="15" fill="rgb(209,38,44)" fg:x="580" fg:w="2"/><text x="7.7591%" y="367.50"></text></g><g><title>[libxcb.so.1.1.0] (2 samples, 0.03%)</title><rect x="7.5091%" y="341" width="0.0259%" height="15" fill="rgb(236,212,23)" fg:x="580" fg:w="2"/><text x="7.7591%" y="351.50"></text></g><g><title>writev (2 samples, 0.03%)</title><rect x="7.5091%" y="325" width="0.0259%" height="15" fill="rgb(242,79,21)" fg:x="580" fg:w="2"/><text x="7.7591%" y="335.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.03%)</title><rect x="7.5091%" y="309" width="0.0259%" height="15" fill="rgb(211,96,35)" fg:x="580" fg:w="2"/><text x="7.7591%" y="319.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.03%)</title><rect x="7.5091%" y="293" width="0.0259%" height="15" fill="rgb(253,215,40)" fg:x="580" fg:w="2"/><text x="7.7591%" y="303.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.03%)</title><rect x="7.5091%" y="277" width="0.0259%" height="15" fill="rgb(211,81,21)" fg:x="580" fg:w="2"/><text x="7.7591%" y="287.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.03%)</title><rect x="7.5091%" y="261" width="0.0259%" height="15" fill="rgb(208,190,38)" fg:x="580" fg:w="2"/><text x="7.7591%" y="271.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.03%)</title><rect x="7.5091%" y="245" width="0.0259%" height="15" fill="rgb(235,213,38)" fg:x="580" fg:w="2"/><text x="7.7591%" y="255.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.03%)</title><rect x="7.5091%" y="229" width="0.0259%" height="15" fill="rgb(237,122,38)" fg:x="580" fg:w="2"/><text x="7.7591%" y="239.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.03%)</title><rect x="7.5091%" y="213" width="0.0259%" height="15" fill="rgb(244,218,35)" fg:x="580" fg:w="2"/><text x="7.7591%" y="223.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.03%)</title><rect x="7.5091%" y="197" width="0.0259%" height="15" fill="rgb(240,68,47)" fg:x="580" fg:w="2"/><text x="7.7591%" y="207.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.03%)</title><rect x="7.5091%" y="181" width="0.0259%" height="15" fill="rgb(210,16,53)" fg:x="580" fg:w="2"/><text x="7.7591%" y="191.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.03%)</title><rect x="7.5091%" y="165" width="0.0259%" height="15" fill="rgb(235,124,12)" fg:x="580" fg:w="2"/><text x="7.7591%" y="175.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.03%)</title><rect x="7.5091%" y="149" width="0.0259%" height="15" fill="rgb(224,169,11)" fg:x="580" fg:w="2"/><text x="7.7591%" y="159.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.03%)</title><rect x="7.5091%" y="133" width="0.0259%" height="15" fill="rgb(250,166,2)" fg:x="580" fg:w="2"/><text x="7.7591%" y="143.50"></text></g><g><title>_XSend@plt (1 samples, 0.01%)</title><rect x="7.5350%" y="373" width="0.0129%" height="15" fill="rgb(242,216,29)" fg:x="582" fg:w="1"/><text x="7.7850%" y="383.50"></text></g><g><title>XPending (455 samples, 5.89%)</title><rect x="2.0326%" y="405" width="5.8907%" height="15" fill="rgb(230,116,27)" fg:x="157" fg:w="455"/><text x="2.2826%" y="415.50">XPending</text></g><g><title>_XEventsQueued (451 samples, 5.84%)</title><rect x="2.0844%" y="389" width="5.8389%" height="15" fill="rgb(228,99,48)" fg:x="161" fg:w="451"/><text x="2.3344%" y="399.50">_XEvent..</text></g><g><title>xcb_connection_has_error (29 samples, 0.38%)</title><rect x="7.5479%" y="373" width="0.3755%" height="15" fill="rgb(253,11,6)" fg:x="583" fg:w="29"/><text x="7.7979%" y="383.50"></text></g><g><title>_XGetRequest (7 samples, 0.09%)</title><rect x="8.0658%" y="389" width="0.0906%" height="15" fill="rgb(247,143,39)" fg:x="623" fg:w="7"/><text x="8.3158%" y="399.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.01%)</title><rect x="8.5189%" y="357" width="0.0129%" height="15" fill="rgb(236,97,10)" fg:x="658" fg:w="1"/><text x="8.7689%" y="367.50"></text></g><g><title>malloc@plt (2 samples, 0.03%)</title><rect x="8.5318%" y="357" width="0.0259%" height="15" fill="rgb(233,208,19)" fg:x="659" fg:w="2"/><text x="8.7818%" y="367.50"></text></g><g><title>xcb_poll_for_queued_event (5 samples, 0.06%)</title><rect x="8.5577%" y="357" width="0.0647%" height="15" fill="rgb(216,164,2)" fg:x="661" fg:w="5"/><text x="8.8077%" y="367.50"></text></g><g><title>[libX11.so.6.4.0] (15 samples, 0.19%)</title><rect x="8.4542%" y="373" width="0.1942%" height="15" fill="rgb(220,129,5)" fg:x="653" fg:w="15"/><text x="8.7042%" y="383.50"></text></g><g><title>xcb_poll_for_queued_event@plt (2 samples, 0.03%)</title><rect x="8.6225%" y="357" width="0.0259%" height="15" fill="rgb(242,17,10)" fg:x="666" fg:w="2"/><text x="8.8725%" y="367.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="8.6484%" y="373" width="0.0129%" height="15" fill="rgb(242,107,0)" fg:x="668" fg:w="1"/><text x="8.8984%" y="383.50"></text></g><g><title>[libX11.so.6.4.0] (1 samples, 0.01%)</title><rect x="8.6872%" y="357" width="0.0129%" height="15" fill="rgb(251,28,31)" fg:x="671" fg:w="1"/><text x="8.9372%" y="367.50"></text></g><g><title>__poll (277 samples, 3.59%)</title><rect x="8.9720%" y="325" width="3.5862%" height="15" fill="rgb(233,223,10)" fg:x="693" fg:w="277"/><text x="9.2220%" y="335.50">__po..</text></g><g><title>[[kernel.kallsyms]] (177 samples, 2.29%)</title><rect x="10.2667%" y="309" width="2.2916%" height="15" fill="rgb(215,21,27)" fg:x="793" fg:w="177"/><text x="10.5167%" y="319.50">[..</text></g><g><title>[[kernel.kallsyms]] (170 samples, 2.20%)</title><rect x="10.3573%" y="293" width="2.2009%" height="15" fill="rgb(232,23,21)" fg:x="800" fg:w="170"/><text x="10.6073%" y="303.50">[..</text></g><g><title>[[kernel.kallsyms]] (166 samples, 2.15%)</title><rect x="10.4091%" y="277" width="2.1491%" height="15" fill="rgb(244,5,23)" fg:x="804" fg:w="166"/><text x="10.6591%" y="287.50">[..</text></g><g><title>[[kernel.kallsyms]] (107 samples, 1.39%)</title><rect x="11.1730%" y="261" width="1.3853%" height="15" fill="rgb(226,81,46)" fg:x="863" fg:w="107"/><text x="11.4230%" y="271.50"></text></g><g><title>[[kernel.kallsyms]] (84 samples, 1.09%)</title><rect x="11.4707%" y="245" width="1.0875%" height="15" fill="rgb(247,70,30)" fg:x="886" fg:w="84"/><text x="11.7207%" y="255.50"></text></g><g><title>[[kernel.kallsyms]] (64 samples, 0.83%)</title><rect x="11.7297%" y="229" width="0.8286%" height="15" fill="rgb(212,68,19)" fg:x="906" fg:w="64"/><text x="11.9797%" y="239.50"></text></g><g><title>[[kernel.kallsyms]] (36 samples, 0.47%)</title><rect x="12.0922%" y="213" width="0.4661%" height="15" fill="rgb(240,187,13)" fg:x="934" fg:w="36"/><text x="12.3422%" y="223.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.06%)</title><rect x="12.4935%" y="197" width="0.0647%" height="15" fill="rgb(223,113,26)" fg:x="965" fg:w="5"/><text x="12.7435%" y="207.50"></text></g><g><title>pthread_cond_signal (1 samples, 0.01%)</title><rect x="12.5583%" y="325" width="0.0129%" height="15" fill="rgb(206,192,2)" fg:x="970" fg:w="1"/><text x="12.8083%" y="335.50"></text></g><g><title>pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="12.5712%" y="325" width="0.0129%" height="15" fill="rgb(241,108,4)" fg:x="971" fg:w="1"/><text x="12.8212%" y="335.50"></text></g><g><title>[libxcb.so.1.1.0] (6,081 samples, 78.73%)</title><rect x="8.8296%" y="341" width="78.7286%" height="15" fill="rgb(247,173,49)" fg:x="682" fg:w="6081"/><text x="9.0796%" y="351.50">[libxcb.so.1.1.0]</text></g><g><title>writev (5,791 samples, 74.97%)</title><rect x="12.5842%" y="325" width="74.9741%" height="15" fill="rgb(224,114,35)" fg:x="972" fg:w="5791"/><text x="12.8342%" y="335.50">writev</text></g><g><title>[[kernel.kallsyms]] (5,762 samples, 74.60%)</title><rect x="12.9596%" y="309" width="74.5987%" height="15" fill="rgb(245,159,27)" fg:x="1001" fg:w="5762"/><text x="13.2096%" y="319.50">[[kernel.kallsyms]]</text></g><g><title>[[kernel.kallsyms]] (5,755 samples, 74.51%)</title><rect x="13.0502%" y="293" width="74.5080%" height="15" fill="rgb(245,172,44)" fg:x="1008" fg:w="5755"/><text x="13.3002%" y="303.50">[[kernel.kallsyms]]</text></g><g><title>[[kernel.kallsyms]] (5,751 samples, 74.46%)</title><rect x="13.1020%" y="277" width="74.4562%" height="15" fill="rgb(236,23,11)" fg:x="1012" fg:w="5751"/><text x="13.3520%" y="287.50">[[kernel.kallsyms]]</text></g><g><title>[[kernel.kallsyms]] (5,691 samples, 73.68%)</title><rect x="13.8788%" y="261" width="73.6794%" height="15" fill="rgb(205,117,38)" fg:x="1072" fg:w="5691"/><text x="14.1288%" y="271.50">[[kernel.kallsyms]]</text></g><g><title>[[kernel.kallsyms]] (5,674 samples, 73.46%)</title><rect x="14.0989%" y="245" width="73.4593%" height="15" fill="rgb(237,72,25)" fg:x="1089" fg:w="5674"/><text x="14.3489%" y="255.50">[[kernel.kallsyms]]</text></g><g><title>[[kernel.kallsyms]] (5,664 samples, 73.33%)</title><rect x="14.2284%" y="229" width="73.3299%" height="15" fill="rgb(244,70,9)" fg:x="1099" fg:w="5664"/><text x="14.4784%" y="239.50">[[kernel.kallsyms]]</text></g><g><title>[[kernel.kallsyms]] (5,615 samples, 72.70%)</title><rect x="14.8628%" y="213" width="72.6955%" height="15" fill="rgb(217,125,39)" fg:x="1148" fg:w="5615"/><text x="15.1128%" y="223.50">[[kernel.kallsyms]]</text></g><g><title>[[kernel.kallsyms]] (5,583 samples, 72.28%)</title><rect x="15.2771%" y="197" width="72.2812%" height="15" fill="rgb(235,36,10)" fg:x="1180" fg:w="5583"/><text x="15.5271%" y="207.50">[[kernel.kallsyms]]</text></g><g><title>[[kernel.kallsyms]] (5,569 samples, 72.10%)</title><rect x="15.4583%" y="181" width="72.0999%" height="15" fill="rgb(251,123,47)" fg:x="1194" fg:w="5569"/><text x="15.7083%" y="191.50">[[kernel.kallsyms]]</text></g><g><title>[[kernel.kallsyms]] (5,514 samples, 71.39%)</title><rect x="16.1704%" y="165" width="71.3879%" height="15" fill="rgb(221,13,13)" fg:x="1249" fg:w="5514"/><text x="16.4204%" y="175.50">[[kernel.kallsyms]]</text></g><g><title>[[kernel.kallsyms]] (5,350 samples, 69.26%)</title><rect x="18.2936%" y="149" width="69.2646%" height="15" fill="rgb(238,131,9)" fg:x="1413" fg:w="5350"/><text x="18.5436%" y="159.50">[[kernel.kallsyms]]</text></g><g><title>[[kernel.kallsyms]] (5,308 samples, 68.72%)</title><rect x="18.8374%" y="133" width="68.7209%" height="15" fill="rgb(211,50,8)" fg:x="1455" fg:w="5308"/><text x="19.0874%" y="143.50">[[kernel.kallsyms]]</text></g><g><title>[[kernel.kallsyms]] (346 samples, 4.48%)</title><rect x="83.0787%" y="117" width="4.4795%" height="15" fill="rgb(245,182,24)" fg:x="6417" fg:w="346"/><text x="83.3287%" y="127.50">[[ker..</text></g><g><title>[[kernel.kallsyms]] (304 samples, 3.94%)</title><rect x="83.6225%" y="101" width="3.9358%" height="15" fill="rgb(242,14,37)" fg:x="6459" fg:w="304"/><text x="83.8725%" y="111.50">[[ke..</text></g><g><title>[[kernel.kallsyms]] (157 samples, 2.03%)</title><rect x="85.5256%" y="85" width="2.0326%" height="15" fill="rgb(246,228,12)" fg:x="6606" fg:w="157"/><text x="85.7756%" y="95.50">[..</text></g><g><title>[[kernel.kallsyms]] (69 samples, 0.89%)</title><rect x="86.6649%" y="69" width="0.8933%" height="15" fill="rgb(213,55,15)" fg:x="6694" fg:w="69"/><text x="86.9149%" y="79.50"></text></g><g><title>[[kernel.kallsyms]] (14 samples, 0.18%)</title><rect x="87.3770%" y="53" width="0.1813%" height="15" fill="rgb(209,9,3)" fg:x="6749" fg:w="14"/><text x="87.6270%" y="63.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.03%)</title><rect x="87.5324%" y="37" width="0.0259%" height="15" fill="rgb(230,59,30)" fg:x="6761" fg:w="2"/><text x="87.7824%" y="47.50"></text></g><g><title>pthread_cond_broadcast (4 samples, 0.05%)</title><rect x="87.5583%" y="341" width="0.0518%" height="15" fill="rgb(209,121,21)" fg:x="6763" fg:w="4"/><text x="87.8083%" y="351.50"></text></g><g><title>pthread_cond_broadcast@plt (1 samples, 0.01%)</title><rect x="87.6100%" y="341" width="0.0129%" height="15" fill="rgb(220,109,13)" fg:x="6767" fg:w="1"/><text x="87.8600%" y="351.50"></text></g><g><title>pthread_mutex_lock (1 samples, 0.01%)</title><rect x="87.6230%" y="341" width="0.0129%" height="15" fill="rgb(232,18,1)" fg:x="6768" fg:w="1"/><text x="87.8730%" y="351.50"></text></g><g><title>_XSend (6,102 samples, 79.00%)</title><rect x="8.6613%" y="373" width="79.0005%" height="15" fill="rgb(215,41,42)" fg:x="669" fg:w="6102"/><text x="8.9113%" y="383.50">_XSend</text></g><g><title>xcb_writev (6,099 samples, 78.96%)</title><rect x="8.7002%" y="357" width="78.9617%" height="15" fill="rgb(224,123,36)" fg:x="672" fg:w="6099"/><text x="8.9502%" y="367.50">xcb_writev</text></g><g><title>pthread_mutex_unlock (2 samples, 0.03%)</title><rect x="87.6359%" y="341" width="0.0259%" height="15" fill="rgb(240,125,3)" fg:x="6769" fg:w="2"/><text x="87.8859%" y="351.50"></text></g><g><title>cfree (4 samples, 0.05%)</title><rect x="87.6618%" y="373" width="0.0518%" height="15" fill="rgb(205,98,50)" fg:x="6771" fg:w="4"/><text x="87.9118%" y="383.50"></text></g><g><title>free@plt (1 samples, 0.01%)</title><rect x="87.7136%" y="373" width="0.0129%" height="15" fill="rgb(205,185,37)" fg:x="6775" fg:w="1"/><text x="87.9636%" y="383.50"></text></g><g><title>memcpy@plt (2 samples, 0.03%)</title><rect x="87.7266%" y="373" width="0.0259%" height="15" fill="rgb(238,207,15)" fg:x="6776" fg:w="2"/><text x="87.9766%" y="383.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="87.9596%" y="325" width="0.0129%" height="15" fill="rgb(213,199,42)" fg:x="6794" fg:w="1"/><text x="88.2096%" y="335.50"></text></g><g><title>[libxcb.so.1.1.0] (2 samples, 0.03%)</title><rect x="88.0891%" y="309" width="0.0259%" height="15" fill="rgb(235,201,11)" fg:x="6804" fg:w="2"/><text x="88.3391%" y="319.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.03%)</title><rect x="88.0891%" y="293" width="0.0259%" height="15" fill="rgb(207,46,11)" fg:x="6804" fg:w="2"/><text x="88.3391%" y="303.50"></text></g><g><title>__libc_malloc (7 samples, 0.09%)</title><rect x="88.1150%" y="309" width="0.0906%" height="15" fill="rgb(241,35,35)" fg:x="6806" fg:w="7"/><text x="88.3650%" y="319.50"></text></g><g><title>[libxcb.so.1.1.0] (101 samples, 1.31%)</title><rect x="87.9726%" y="325" width="1.3076%" height="15" fill="rgb(243,32,47)" fg:x="6795" fg:w="101"/><text x="88.2226%" y="335.50"></text></g><g><title>recvmsg (83 samples, 1.07%)</title><rect x="88.2056%" y="309" width="1.0746%" height="15" fill="rgb(247,202,23)" fg:x="6813" fg:w="83"/><text x="88.4556%" y="319.50"></text></g><g><title>[[kernel.kallsyms]] (72 samples, 0.93%)</title><rect x="88.3480%" y="293" width="0.9322%" height="15" fill="rgb(219,102,11)" fg:x="6824" fg:w="72"/><text x="88.5980%" y="303.50"></text></g><g><title>[[kernel.kallsyms]] (72 samples, 0.93%)</title><rect x="88.3480%" y="277" width="0.9322%" height="15" fill="rgb(243,110,44)" fg:x="6824" fg:w="72"/><text x="88.5980%" y="287.50"></text></g><g><title>[[kernel.kallsyms]] (71 samples, 0.92%)</title><rect x="88.3610%" y="261" width="0.9192%" height="15" fill="rgb(222,74,54)" fg:x="6825" fg:w="71"/><text x="88.6110%" y="271.50"></text></g><g><title>[[kernel.kallsyms]] (65 samples, 0.84%)</title><rect x="88.4386%" y="245" width="0.8415%" height="15" fill="rgb(216,99,12)" fg:x="6831" fg:w="65"/><text x="88.6886%" y="255.50"></text></g><g><title>[[kernel.kallsyms]] (65 samples, 0.84%)</title><rect x="88.4386%" y="229" width="0.8415%" height="15" fill="rgb(226,22,26)" fg:x="6831" fg:w="65"/><text x="88.6886%" y="239.50"></text></g><g><title>[[kernel.kallsyms]] (64 samples, 0.83%)</title><rect x="88.4516%" y="213" width="0.8286%" height="15" fill="rgb(217,163,10)" fg:x="6832" fg:w="64"/><text x="88.7016%" y="223.50"></text></g><g><title>[[kernel.kallsyms]] (63 samples, 0.82%)</title><rect x="88.4645%" y="197" width="0.8156%" height="15" fill="rgb(213,25,53)" fg:x="6833" fg:w="63"/><text x="88.7145%" y="207.50"></text></g><g><title>[[kernel.kallsyms]] (58 samples, 0.75%)</title><rect x="88.5293%" y="181" width="0.7509%" height="15" fill="rgb(252,105,26)" fg:x="6838" fg:w="58"/><text x="88.7793%" y="191.50"></text></g><g><title>[[kernel.kallsyms]] (43 samples, 0.56%)</title><rect x="88.7235%" y="165" width="0.5567%" height="15" fill="rgb(220,39,43)" fg:x="6853" fg:w="43"/><text x="88.9735%" y="175.50"></text></g><g><title>[[kernel.kallsyms]] (23 samples, 0.30%)</title><rect x="88.9824%" y="149" width="0.2978%" height="15" fill="rgb(229,68,48)" fg:x="6873" fg:w="23"/><text x="89.2324%" y="159.50"></text></g><g><title>[[kernel.kallsyms]] (16 samples, 0.21%)</title><rect x="89.0730%" y="133" width="0.2071%" height="15" fill="rgb(252,8,32)" fg:x="6880" fg:w="16"/><text x="89.3230%" y="143.50"></text></g><g><title>[[kernel.kallsyms]] (14 samples, 0.18%)</title><rect x="89.0989%" y="117" width="0.1813%" height="15" fill="rgb(223,20,43)" fg:x="6882" fg:w="14"/><text x="89.3489%" y="127.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.14%)</title><rect x="89.1378%" y="101" width="0.1424%" height="15" fill="rgb(229,81,49)" fg:x="6885" fg:w="11"/><text x="89.3878%" y="111.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.10%)</title><rect x="89.1766%" y="85" width="0.1036%" height="15" fill="rgb(236,28,36)" fg:x="6888" fg:w="8"/><text x="89.4266%" y="95.50"></text></g><g><title>__poll (158 samples, 2.05%)</title><rect x="89.2802%" y="325" width="2.0456%" height="15" fill="rgb(249,185,26)" fg:x="6896" fg:w="158"/><text x="89.5302%" y="335.50">_..</text></g><g><title>[[kernel.kallsyms]] (151 samples, 1.95%)</title><rect x="89.3708%" y="309" width="1.9549%" height="15" fill="rgb(249,174,33)" fg:x="6903" fg:w="151"/><text x="89.6208%" y="319.50">[..</text></g><g><title>[[kernel.kallsyms]] (150 samples, 1.94%)</title><rect x="89.3837%" y="293" width="1.9420%" height="15" fill="rgb(233,201,37)" fg:x="6904" fg:w="150"/><text x="89.6337%" y="303.50">[..</text></g><g><title>[[kernel.kallsyms]] (150 samples, 1.94%)</title><rect x="89.3837%" y="277" width="1.9420%" height="15" fill="rgb(221,78,26)" fg:x="6904" fg:w="150"/><text x="89.6337%" y="287.50">[..</text></g><g><title>[[kernel.kallsyms]] (134 samples, 1.73%)</title><rect x="89.5909%" y="261" width="1.7349%" height="15" fill="rgb(250,127,30)" fg:x="6920" fg:w="134"/><text x="89.8409%" y="271.50"></text></g><g><title>[[kernel.kallsyms]] (124 samples, 1.61%)</title><rect x="89.7204%" y="245" width="1.6054%" height="15" fill="rgb(230,49,44)" fg:x="6930" fg:w="124"/><text x="89.9704%" y="255.50"></text></g><g><title>[[kernel.kallsyms]] (116 samples, 1.50%)</title><rect x="89.8239%" y="229" width="1.5018%" height="15" fill="rgb(229,67,23)" fg:x="6938" fg:w="116"/><text x="90.0739%" y="239.50"></text></g><g><title>[[kernel.kallsyms]] (105 samples, 1.36%)</title><rect x="89.9663%" y="213" width="1.3594%" height="15" fill="rgb(249,83,47)" fg:x="6949" fg:w="105"/><text x="90.2163%" y="223.50"></text></g><g><title>[[kernel.kallsyms]] (98 samples, 1.27%)</title><rect x="90.0570%" y="197" width="1.2688%" height="15" fill="rgb(215,43,3)" fg:x="6956" fg:w="98"/><text x="90.3070%" y="207.50"></text></g><g><title>cfree (5 samples, 0.06%)</title><rect x="91.3257%" y="325" width="0.0647%" height="15" fill="rgb(238,154,13)" fg:x="7054" fg:w="5"/><text x="91.5757%" y="335.50"></text></g><g><title>[libxcb.so.1.1.0] (275 samples, 3.56%)</title><rect x="87.8431%" y="341" width="3.5603%" height="15" fill="rgb(219,56,2)" fg:x="6785" fg:w="275"/><text x="88.0931%" y="351.50">[lib..</text></g><g><title>free@plt (1 samples, 0.01%)</title><rect x="91.3905%" y="325" width="0.0129%" height="15" fill="rgb(233,0,4)" fg:x="7059" fg:w="1"/><text x="91.6405%" y="335.50"></text></g><g><title>pthread_cond_destroy (2 samples, 0.03%)</title><rect x="91.4034%" y="341" width="0.0259%" height="15" fill="rgb(235,30,7)" fg:x="7060" fg:w="2"/><text x="91.6534%" y="351.50"></text></g><g><title>xcb_wait_for_reply64 (285 samples, 3.69%)</title><rect x="87.7525%" y="373" width="3.6898%" height="15" fill="rgb(250,79,13)" fg:x="6778" fg:w="285"/><text x="88.0025%" y="383.50">xcb_..</text></g><g><title>[libxcb.so.1.1.0] (281 samples, 3.64%)</title><rect x="87.8042%" y="357" width="3.6380%" height="15" fill="rgb(211,146,34)" fg:x="6782" fg:w="281"/><text x="88.0542%" y="367.50">[lib..</text></g><g><title>pthread_cond_destroy@plt (1 samples, 0.01%)</title><rect x="91.4293%" y="341" width="0.0129%" height="15" fill="rgb(228,22,38)" fg:x="7062" fg:w="1"/><text x="91.6793%" y="351.50"></text></g><g><title>XSync (6,452 samples, 83.53%)</title><rect x="7.9234%" y="405" width="83.5318%" height="15" fill="rgb(235,168,5)" fg:x="612" fg:w="6452"/><text x="8.1734%" y="415.50">XSync</text></g><g><title>_XReply (6,434 samples, 83.30%)</title><rect x="8.1564%" y="389" width="83.2988%" height="15" fill="rgb(221,155,16)" fg:x="630" fg:w="6434"/><text x="8.4064%" y="399.50">_XReply</text></g><g><title>xcb_wait_for_reply64@plt (1 samples, 0.01%)</title><rect x="91.4423%" y="373" width="0.0129%" height="15" fill="rgb(215,215,53)" fg:x="7063" fg:w="1"/><text x="91.6923%" y="383.50"></text></g><g><title>XSync@plt (4 samples, 0.05%)</title><rect x="91.4552%" y="405" width="0.0518%" height="15" fill="rgb(223,4,10)" fg:x="7064" fg:w="4"/><text x="91.7052%" y="415.50"></text></g><g><title>default_hook (4 samples, 0.05%)</title><rect x="91.5070%" y="405" width="0.0518%" height="15" fill="rgb(234,103,6)" fg:x="7068" fg:w="4"/><text x="91.7570%" y="415.50"></text></g><g><title>_IO_printf (2 samples, 0.03%)</title><rect x="92.4262%" y="357" width="0.0259%" height="15" fill="rgb(227,97,0)" fg:x="7139" fg:w="2"/><text x="92.6762%" y="367.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.03%)</title><rect x="92.4262%" y="341" width="0.0259%" height="15" fill="rgb(234,150,53)" fg:x="7139" fg:w="2"/><text x="92.6762%" y="351.50"></text></g><g><title>_IO_file_xsputn (2 samples, 0.03%)</title><rect x="92.4262%" y="325" width="0.0259%" height="15" fill="rgb(228,201,54)" fg:x="7139" fg:w="2"/><text x="92.6762%" y="335.50"></text></g><g><title>_IO_do_write (2 samples, 0.03%)</title><rect x="92.4262%" y="309" width="0.0259%" height="15" fill="rgb(222,22,37)" fg:x="7139" fg:w="2"/><text x="92.6762%" y="319.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.03%)</title><rect x="92.4262%" y="293" width="0.0259%" height="15" fill="rgb(237,53,32)" fg:x="7139" fg:w="2"/><text x="92.6762%" y="303.50"></text></g><g><title>_IO_file_write (2 samples, 0.03%)</title><rect x="92.4262%" y="277" width="0.0259%" height="15" fill="rgb(233,25,53)" fg:x="7139" fg:w="2"/><text x="92.6762%" y="287.50"></text></g><g><title>__write (2 samples, 0.03%)</title><rect x="92.4262%" y="261" width="0.0259%" height="15" fill="rgb(210,40,34)" fg:x="7139" fg:w="2"/><text x="92.6762%" y="271.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.03%)</title><rect x="92.4262%" y="245" width="0.0259%" height="15" fill="rgb(241,220,44)" fg:x="7139" fg:w="2"/><text x="92.6762%" y="255.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.03%)</title><rect x="92.4262%" y="229" width="0.0259%" height="15" fill="rgb(235,28,35)" fg:x="7139" fg:w="2"/><text x="92.6762%" y="239.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.03%)</title><rect x="92.4262%" y="213" width="0.0259%" height="15" fill="rgb(210,56,17)" fg:x="7139" fg:w="2"/><text x="92.6762%" y="223.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.03%)</title><rect x="92.4262%" y="197" width="0.0259%" height="15" fill="rgb(224,130,29)" fg:x="7139" fg:w="2"/><text x="92.6762%" y="207.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.03%)</title><rect x="92.4262%" y="181" width="0.0259%" height="15" fill="rgb(235,212,8)" fg:x="7139" fg:w="2"/><text x="92.6762%" y="191.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.03%)</title><rect x="92.4262%" y="165" width="0.0259%" height="15" fill="rgb(223,33,50)" fg:x="7139" fg:w="2"/><text x="92.6762%" y="175.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.03%)</title><rect x="92.4262%" y="149" width="0.0259%" height="15" fill="rgb(219,149,13)" fg:x="7139" fg:w="2"/><text x="92.6762%" y="159.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.03%)</title><rect x="92.4262%" y="133" width="0.0259%" height="15" fill="rgb(250,156,29)" fg:x="7139" fg:w="2"/><text x="92.6762%" y="143.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.03%)</title><rect x="92.4262%" y="117" width="0.0259%" height="15" fill="rgb(216,193,19)" fg:x="7139" fg:w="2"/><text x="92.6762%" y="127.50"></text></g><g><title>add3_vec3 (38 samples, 0.49%)</title><rect x="92.4521%" y="357" width="0.4920%" height="15" fill="rgb(216,135,14)" fg:x="7141" fg:w="38"/><text x="92.7021%" y="367.50"></text></g><g><title>vec3 (4 samples, 0.05%)</title><rect x="92.8923%" y="341" width="0.0518%" height="15" fill="rgb(241,47,5)" fg:x="7175" fg:w="4"/><text x="93.1423%" y="351.50"></text></g><g><title>fill_pixel (6 samples, 0.08%)</title><rect x="92.9441%" y="357" width="0.0777%" height="15" fill="rgb(233,42,35)" fg:x="7179" fg:w="6"/><text x="93.1941%" y="367.50"></text></g><g><title>mult_vec3 (83 samples, 1.07%)</title><rect x="93.0218%" y="357" width="1.0746%" height="15" fill="rgb(231,13,6)" fg:x="7185" fg:w="83"/><text x="93.2718%" y="367.50"></text></g><g><title>vec3 (19 samples, 0.25%)</title><rect x="93.8503%" y="341" width="0.2460%" height="15" fill="rgb(207,181,40)" fg:x="7249" fg:w="19"/><text x="94.1003%" y="351.50"></text></g><g><title>add_vec3 (16 samples, 0.21%)</title><rect x="94.8990%" y="341" width="0.2071%" height="15" fill="rgb(254,173,49)" fg:x="7330" fg:w="16"/><text x="95.1490%" y="351.50"></text></g><g><title>vec3 (1 samples, 0.01%)</title><rect x="95.0932%" y="325" width="0.0129%" height="15" fill="rgb(221,1,38)" fg:x="7345" fg:w="1"/><text x="95.3432%" y="335.50"></text></g><g><title>add_vec3_self (14 samples, 0.18%)</title><rect x="95.1062%" y="341" width="0.1813%" height="15" fill="rgb(206,124,46)" fg:x="7346" fg:w="14"/><text x="95.3562%" y="351.50"></text></g><g><title>dot_vec3 (37 samples, 0.48%)</title><rect x="96.6598%" y="325" width="0.4790%" height="15" fill="rgb(249,21,11)" fg:x="7466" fg:w="37"/><text x="96.9098%" y="335.50"></text></g><g><title>hit_sphere (200 samples, 2.59%)</title><rect x="95.2874%" y="341" width="2.5893%" height="15" fill="rgb(222,201,40)" fg:x="7360" fg:w="200"/><text x="95.5374%" y="351.50">hi..</text></g><g><title>sub_vec3 (57 samples, 0.74%)</title><rect x="97.1388%" y="325" width="0.7380%" height="15" fill="rgb(235,61,29)" fg:x="7503" fg:w="57"/><text x="97.3888%" y="335.50"></text></g><g><title>vec3 (10 samples, 0.13%)</title><rect x="97.7473%" y="309" width="0.1295%" height="15" fill="rgb(219,207,3)" fg:x="7550" fg:w="10"/><text x="97.9973%" y="319.50"></text></g><g><title>mult_vec3 (12 samples, 0.16%)</title><rect x="97.8767%" y="341" width="0.1554%" height="15" fill="rgb(222,56,46)" fg:x="7560" fg:w="12"/><text x="98.1267%" y="351.50"></text></g><g><title>vec3 (2 samples, 0.03%)</title><rect x="98.0062%" y="325" width="0.0259%" height="15" fill="rgb(239,76,54)" fg:x="7570" fg:w="2"/><text x="98.2562%" y="335.50"></text></g><g><title>mult_vec3_self (9 samples, 0.12%)</title><rect x="98.0321%" y="341" width="0.1165%" height="15" fill="rgb(231,124,27)" fg:x="7572" fg:w="9"/><text x="98.2821%" y="351.50"></text></g><g><title>sub_vec3_self (22 samples, 0.28%)</title><rect x="98.1486%" y="341" width="0.2848%" height="15" fill="rgb(249,195,6)" fg:x="7581" fg:w="22"/><text x="98.3986%" y="351.50"></text></g><g><title>unit_vec3 (8 samples, 0.10%)</title><rect x="98.4335%" y="341" width="0.1036%" height="15" fill="rgb(237,174,47)" fg:x="7603" fg:w="8"/><text x="98.6835%" y="351.50"></text></g><g><title>mult_vec3 (1 samples, 0.01%)</title><rect x="98.5241%" y="325" width="0.0129%" height="15" fill="rgb(206,201,31)" fg:x="7610" fg:w="1"/><text x="98.7741%" y="335.50"></text></g><g><title>unit_vec3_self (48 samples, 0.62%)</title><rect x="98.5370%" y="341" width="0.6214%" height="15" fill="rgb(231,57,52)" fg:x="7611" fg:w="48"/><text x="98.7870%" y="351.50"></text></g><g><title>mult_vec3_self (13 samples, 0.17%)</title><rect x="98.9902%" y="325" width="0.1683%" height="15" fill="rgb(248,177,22)" fg:x="7646" fg:w="13"/><text x="99.2402%" y="335.50"></text></g><g><title>ray_color_sphere_shaded (420 samples, 5.44%)</title><rect x="94.0963%" y="357" width="5.4376%" height="15" fill="rgb(215,211,37)" fg:x="7268" fg:w="420"/><text x="94.3463%" y="367.50">ray_col..</text></g><g><title>vec3_to_color (29 samples, 0.38%)</title><rect x="99.1585%" y="341" width="0.3755%" height="15" fill="rgb(241,128,51)" fg:x="7659" fg:w="29"/><text x="99.4085%" y="351.50"></text></g><g><title>handle_key_press_hook (651 samples, 8.43%)</title><rect x="91.5588%" y="405" width="8.4283%" height="15" fill="rgb(227,165,31)" fg:x="7072" fg:w="651"/><text x="91.8088%" y="415.50">handle_key_p..</text></g><g><title>handle_key_press_hook_rt_one_weekend (651 samples, 8.43%)</title><rect x="91.5588%" y="389" width="8.4283%" height="15" fill="rgb(228,167,24)" fg:x="7072" fg:w="651"/><text x="91.8088%" y="399.50">handle_key_p..</text></g><g><title>generate_sphere_shaded (651 samples, 8.43%)</title><rect x="91.5588%" y="373" width="8.4283%" height="15" fill="rgb(228,143,12)" fg:x="7072" fg:w="651"/><text x="91.8088%" y="383.50">generate_sph..</text></g><g><title>sub_vec3 (35 samples, 0.45%)</title><rect x="99.5339%" y="357" width="0.4531%" height="15" fill="rgb(249,149,8)" fg:x="7688" fg:w="35"/><text x="99.7839%" y="367.50"></text></g><g><title>vec3 (8 samples, 0.10%)</title><rect x="99.8835%" y="341" width="0.1036%" height="15" fill="rgb(243,35,44)" fg:x="7715" fg:w="8"/><text x="100.1335%" y="351.50"></text></g><g><title>all (7,724 samples, 100%)</title><rect x="0.0000%" y="501" width="100.0000%" height="15" fill="rgb(246,89,9)" fg:x="0" fg:w="7724"/><text x="0.2500%" y="511.50"></text></g><g><title>minirt (7,724 samples, 100.00%)</title><rect x="0.0000%" y="485" width="100.0000%" height="15" fill="rgb(233,213,13)" fg:x="0" fg:w="7724"/><text x="0.2500%" y="495.50">minirt</text></g><g><title>_start (7,724 samples, 100.00%)</title><rect x="0.0000%" y="469" width="100.0000%" height="15" fill="rgb(233,141,41)" fg:x="0" fg:w="7724"/><text x="0.2500%" y="479.50">_start</text></g><g><title>__libc_start_main (7,724 samples, 100.00%)</title><rect x="0.0000%" y="453" width="100.0000%" height="15" fill="rgb(239,167,4)" fg:x="0" fg:w="7724"/><text x="0.2500%" y="463.50">__libc_start_main</text></g><g><title>main (7,724 samples, 100.00%)</title><rect x="0.0000%" y="437" width="100.0000%" height="15" fill="rgb(209,217,16)" fg:x="0" fg:w="7724"/><text x="0.2500%" y="447.50">main</text></g><g><title>mlx_loop (7,575 samples, 98.07%)</title><rect x="1.9291%" y="421" width="98.0709%" height="15" fill="rgb(219,88,35)" fg:x="149" fg:w="7575"/><text x="2.1791%" y="431.50">mlx_loop</text></g><g><title>mlx_int_param_KeyPress (1 samples, 0.01%)</title><rect x="99.9871%" y="405" width="0.0129%" height="15" fill="rgb(220,193,23)" fg:x="7723" fg:w="1"/><text x="100.2371%" y="415.50"></text></g><g><title>XkbKeycodeToKeysym (1 samples, 0.01%)</title><rect x="99.9871%" y="389" width="0.0129%" height="15" fill="rgb(230,90,52)" fg:x="7723" fg:w="1"/><text x="100.2371%" y="399.50"></text></g><g><title>[libX11.so.6.4.0] (1 samples, 0.01%)</title><rect x="99.9871%" y="373" width="0.0129%" height="15" fill="rgb(252,106,19)" fg:x="7723" fg:w="1"/><text x="100.2371%" y="383.50"></text></g><g><title>XkbGetMap (1 samples, 0.01%)</title><rect x="99.9871%" y="357" width="0.0129%" height="15" fill="rgb(206,74,20)" fg:x="7723" fg:w="1"/><text x="100.2371%" y="367.50"></text></g><g><title>XkbGetUpdatedMap (1 samples, 0.01%)</title><rect x="99.9871%" y="341" width="0.0129%" height="15" fill="rgb(230,138,44)" fg:x="7723" fg:w="1"/><text x="100.2371%" y="351.50"></text></g><g><title>_XkbReadGetMapReply (1 samples, 0.01%)</title><rect x="99.9871%" y="325" width="0.0129%" height="15" fill="rgb(235,182,43)" fg:x="7723" fg:w="1"/><text x="100.2371%" y="335.50"></text></g><g><title>XkbAllocClientMap (1 samples, 0.01%)</title><rect x="99.9871%" y="309" width="0.0129%" height="15" fill="rgb(242,16,51)" fg:x="7723" fg:w="1"/><text x="100.2371%" y="319.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.01%)</title><rect x="99.9871%" y="293" width="0.0129%" height="15" fill="rgb(248,9,4)" fg:x="7723" fg:w="1"/><text x="100.2371%" y="303.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.01%)</title><rect x="99.9871%" y="277" width="0.0129%" height="15" fill="rgb(210,31,22)" fg:x="7723" fg:w="1"/><text x="100.2371%" y="287.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.01%)</title><rect x="99.9871%" y="261" width="0.0129%" height="15" fill="rgb(239,54,39)" fg:x="7723" fg:w="1"/><text x="100.2371%" y="271.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.01%)</title><rect x="99.9871%" y="245" width="0.0129%" height="15" fill="rgb(230,99,41)" fg:x="7723" fg:w="1"/><text x="100.2371%" y="255.50"></text></g></svg></svg>